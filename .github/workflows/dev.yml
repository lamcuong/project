name: Deploy dev
on:
  push:
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-cache-
        
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/apps/frontend/.next/cache
          key: ${{ runner.os }}-nextjs-cache-${{ hashFiles('apps/frontend/**/*.tsx', 'apps/frontend/**/*.ts', 'apps/frontend/**/*.js') }}
          restore-keys: ${{ runner.os }}-nextjs-cache-
  
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Setup env frontend
        if: matrix.app == 'frontend'
        run: echo "${{secrets.DEV_FE}}" > apps/frontend/.env

      - name: Build projects
        run: npx nx run ${{matrix.app}}:build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}-dev:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}-dev:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}-dev:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}-dev:buildcache,mode=max
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: dev-env
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVER_IP }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u ${{github.actor}} --password-stdin
            docker pull ghcr.io/${{github.repository_owner}}/frontend-dev:latest
            docker pull ghcr.io/${{github.repository_owner}}/backend-dev:latest
            cd ${{ vars.PATH_TO_PROJECT }}
            docker compose down
            docker compose up -d
            docker image prune -f
